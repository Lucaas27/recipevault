version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: recipevault.API/Dockerfile
      target: final
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:${APP_PORT}
      - ConnectionStrings__DefaultConnection=Host=${DB_HOST:-db};Database=${DB_NAME:-recipevault};Username=${DB_USER:-postgres};Password=${DB_PASSWORD:-postgres};Timeout=15;CommandTimeout=15; Pooling=true;MinPoolSize=1;MaxPoolSize=20;ConnectionIdleLifetime=300;ConnectionPruningInterval=10; Trust Server Certificate=true
    depends_on:
      db:
        condition: service_healthy
    ports:
      - ${APP_PORT}:${APP_PORT}
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:${APP_PORT}/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - database:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  database:
