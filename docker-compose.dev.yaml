version: '3.8'

services:
  api:
    image: recipevault-api
    build:
      context: .
      dockerfile: recipevault.API/Dockerfile
      target: build
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:5000;http://+:5001
      - ASPNETCORE_Kestrel__Certificates__Default__Password=cert
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=recipevault;Username=postgres;Password=postgres;Timeout=15;CommandTimeout=15; Pooling=true;MinPoolSize=1;MaxPoolSize=20;ConnectionIdleLifetime=300;ConnectionPruningInterval=10; Trust Server Certificate=true
    volumes:
      - ~/.aspnet/https:/https:ro
      - ${APPDATA}/microsoft/UserSecrets/:/root/.microsoft/usersecrets:ro
      - ./recipevault.API/:/app
    ports:
      - '5000:5000'
      - '5001:5001'
    entrypoint: ['dotnet', 'watch', 'run', '--no-launch-profile']
    depends_on:
      - postgres

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - 8880:80
    depends_on:
      - postgres

  migrations:
    build:
      context: .
      dockerfile: recipevault.API/Dockerfile
      target: build
    command: ['dotnet', 'ef', 'database', 'update']
    restart: no
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=recipevault;Username=postgres;Password=postgres;Timeout=15;CommandTimeout=15; Pooling=true;MinPoolSize=1;MaxPoolSize=20;ConnectionIdleLifetime=300;ConnectionPruningInterval=10; Trust Server Certificate=true
    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: recipevault
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - 5432:5432

volumes:
  postgres_dev_data:
