version: '3.8'

services:
  api:
    image: recipevault-api
    build:
      context: .
      dockerfile: recipevault.API/Dockerfile
      target: build
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:5000;http://+:5001
      - ASPNETCORE_Kestrel__Certificates__Default__Password=cert
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=${DB_NAME:-recipevault};Username=${DB_USER:-postgres};Password=${DB_PASSWORD:-postgres};Timeout=15;CommandTimeout=15; Pooling=true;MinPoolSize=1;MaxPoolSize=20;ConnectionIdleLifetime=300;ConnectionPruningInterval=10; Trust Server Certificate=true
    volumes:
      - ~/.aspnet/https:/https:ro
      - ${APPDATA}/microsoft/UserSecrets/:/root/.microsoft/usersecrets:ro
      - ./recipevault.API/:/app
    ports:
      - 5000:5000
      - 5001:5001
    entrypoint: ['dotnet', 'watch', 'run', '--no-launch-profile']
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5001/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - 8880:80
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'wget', '-O', '-', 'http://localhost:80/misc/ping']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  migrations:
    build:
      context: .
      dockerfile: recipevault.API/Dockerfile
      target: build
    command: ['dotnet', 'ef', 'database', 'update']
    restart: no
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=${DB_NAME:-recipevault};Username=${DB_USER:-postgres};Password=${DB_PASSWORD:-postgres};Timeout=15;CommandTimeout=15; Pooling=true;MinPoolSize=1;MaxPoolSize=20;ConnectionIdleLifetime=300;ConnectionPruningInterval=10; Trust Server Certificate=true
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME:-recipevault}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - database:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER:-postgres}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  database:
